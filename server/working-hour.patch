diff --git a/otsd b/otsd
index b1800bb..aef7dd2 100755
--- a/otsd
+++ b/otsd
@@ -65,6 +65,8 @@ parser.add_argument("--btc-min-confirmations", metavar='N', type=int,
 parser.add_argument("--btc-min-tx-interval", metavar='SECONDS', type=int,
                     default=3600,
                     help="Minimum interval between timestamp transactions (default: %(default)d seconds)")
+parser.add_argument('--working-hour', action='append', type=int,
+                    help='Restrict timestamp transactions only at a defined hour as UTC integer value (can be repeated)')
 parser.add_argument("--btc-max-fee", metavar='FEE', type=float,
                     default=0.001,
                     help="Maximum transaction fee (default: %(default).3f BTC)")
@@ -122,7 +124,8 @@ stamper = otsserver.stamper.Stamper(calendar, exit_event,
                                     args.btc_min_confirmations,
                                     args.btc_min_tx_interval,
                                     args.btc_max_fee * bitcoin.core.COIN,
-                                    args.max_pending)
+                                    args.max_pending,
+                                    args.working_hour)
 
 calendar.stamper = stamper
 
diff --git a/otsserver/stamper.py b/otsserver/stamper.py
index 792297e..b8c2bc8 100644
--- a/otsserver/stamper.py
+++ b/otsserver/stamper.py
@@ -25,6 +25,7 @@ from opentimestamps.core.op import OpPrepend, OpSHA256
 from opentimestamps.core.timestamp import Timestamp, make_merkle_tree
 
 from otsserver.calendar import Journal
+from datetime import datetime
 
 KnownBlock = collections.namedtuple('KnownBlock', ['height', 'hash'])
 TimestampTx = collections.namedtuple('TimestampTx', ['tx', 'tip_timestamp', 'commitment_timestamps'])
@@ -357,6 +358,10 @@ class Stamper:
 
                 break
 
+        if self.working_hour and str(datetime.utcnow().hour) not in self.working_hour:
+            logging.debug("No working hour")
+            return
+
         time_to_next_tx = int(self.last_timestamp_tx + self.min_tx_interval - time.time())
         if time_to_next_tx > 0:
             # Minimum interval between transactions hasn't been reached, so do nothing
@@ -500,7 +505,7 @@ class Stamper:
             else:
                 return False
 
-    def __init__(self, calendar, exit_event, relay_feerate, min_confirmations, min_tx_interval, max_fee, max_pending):
+    def __init__(self, calendar, exit_event, relay_feerate, min_confirmations, min_tx_interval, max_fee, max_pending, working_hour):
         self.calendar = calendar
         self.exit_event = exit_event
 
@@ -510,6 +515,7 @@ class Stamper:
         self.min_tx_interval = min_tx_interval
         self.max_fee = max_fee
         self.max_pending = max_pending
+        self.working_hour = working_hour
 
         self.known_blocks = KnownBlocks()
         self.unconfirmed_txs = []

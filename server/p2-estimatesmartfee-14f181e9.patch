diff --git a/otsd b/otsd
index aef7dd2..a7fa622 100755
--- a/otsd
+++ b/otsd
@@ -59,6 +59,12 @@ parser.add_argument("--max-pending", type=int,
 parser.add_argument("--btc-min-relay-feerate", metavar='FEEPERKB', type=float,
                     default=0.00001,
                     help="Minimum relay feerate (default: %(default).6f BTC/KB)")
+parser.add_argument("--btc-estimatesmartfee-mode", metavar='ESTIMATEMODE', type=str,
+                    default=None, choices=['CONSERVATIVE', 'ECONOMICAL'],
+                    help="The fee estimate mode (CONSERVATIVE or ECONOMICAL), disabled by default if unset")
+parser.add_argument("--btc-estimatesmartfee-target", metavar='ESTIMATETARGET', type=int,
+                    default=6,
+                    help="Confirmation target in blocks (1 - 1008, default: %(default)d)")
 parser.add_argument("--btc-min-confirmations", metavar='N', type=int,
                     default=6,
                     help="Confirmations required before we save a Bitcoin timestamp permanently, must be greater than 1 (default: %(default)d)")
@@ -121,6 +127,8 @@ aggregator = otsserver.calendar.Aggregator(calendar, exit_event)
 
 stamper = otsserver.stamper.Stamper(calendar, exit_event,
                                     args.btc_min_relay_feerate / 1000 * bitcoin.core.COIN,
+                                    args.btc_estimatesmartfee_mode,
+                                    args.btc_estimatesmartfee_target,
                                     args.btc_min_confirmations,
                                     args.btc_min_tx_interval,
                                     args.btc_max_fee * bitcoin.core.COIN,
diff --git a/otsserver/stamper.py b/otsserver/stamper.py
index 0dddbad..b05353d 100644
--- a/otsserver/stamper.py
+++ b/otsserver/stamper.py
@@ -403,8 +403,22 @@ class Stamper:
         # that the proxy dies
         proxy = bitcoin.rpc.Proxy()
 
-        sent_tx = None
         relay_feerate = self.relay_feerate
+        # if opted-in try to get estimatesmartfee as
+        if self.btc_estimatesmartfee_mode:
+            try:
+                r = proxy.call('estimatesmartfee',
+                        self.btc_estimatesmartfee_target,
+                        self.btc_estimatesmartfee_mode)
+                if 'feerate' in r: # Success!
+                    relay_feerate = float(r['feerate']) /1000 * bitcoin.core.COIN
+                elif 'errors' in r:
+                    logging.info("estimatesmartfee not available: %r" % r['errors'])
+            except bitcoin.rpc.JSONRPCError as err:
+                logging.debug("estimatesmartfee error: %r" % err.error)
+        logging.info("relay feerate: %f" % relay_feerate)
+
+        sent_tx = None
         while sent_tx is None:
             unsigned_tx = self.__update_timestamp_tx(prev_tx, tip_timestamp.msg,
                                                      proxy.getblockcount(), relay_feerate)
@@ -515,11 +529,13 @@ class Stamper:
             else:
                 return False
 
-    def __init__(self, calendar, exit_event, relay_feerate, min_confirmations, min_tx_interval, max_fee, max_pending, working_hour):
+    def __init__(self, calendar, exit_event, relay_feerate, btc_estimatesmartfee_mode, btc_estimatesmartfee_target, min_confirmations, min_tx_interval, max_fee, max_pending, working_hour):
         self.calendar = calendar
         self.exit_event = exit_event
 
         self.relay_feerate = relay_feerate
+        self.btc_estimatesmartfee_mode = btc_estimatesmartfee_mode
+        self.btc_estimatesmartfee_target = btc_estimatesmartfee_target
         self.min_confirmations = min_confirmations
         assert self.min_confirmations > 1
         self.min_tx_interval = min_tx_interval
